// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-arrow-back-name: 'icon-arrow-back';
$icon-arrow-back-x: 0px;
$icon-arrow-back-y: 90px;
$icon-arrow-back-offset-x: 0px;
$icon-arrow-back-offset-y: -90px;
$icon-arrow-back-width: 21px;
$icon-arrow-back-height: 13px;
$icon-arrow-back-total-width: 209px;
$icon-arrow-back-total-height: 123px;
$icon-arrow-back-image: '../images/sprite.png';
$icon-arrow-back: (0px, 90px, 0px, -90px, 21px, 13px, 209px, 123px, '../images/sprite.png', 'icon-arrow-back', );
$icon-arrow-name: 'icon-arrow';
$icon-arrow-x: 0px;
$icon-arrow-y: 103px;
$icon-arrow-offset-x: 0px;
$icon-arrow-offset-y: -103px;
$icon-arrow-width: 11px;
$icon-arrow-height: 20px;
$icon-arrow-total-width: 209px;
$icon-arrow-total-height: 123px;
$icon-arrow-image: '../images/sprite.png';
$icon-arrow: (0px, 103px, 0px, -103px, 11px, 20px, 209px, 123px, '../images/sprite.png', 'icon-arrow', );
$icon-balloon-name: 'icon-balloon';
$icon-balloon-x: 90px;
$icon-balloon-y: 0px;
$icon-balloon-offset-x: -90px;
$icon-balloon-offset-y: 0px;
$icon-balloon-width: 67px;
$icon-balloon-height: 89px;
$icon-balloon-total-width: 209px;
$icon-balloon-total-height: 123px;
$icon-balloon-image: '../images/sprite.png';
$icon-balloon: (90px, 0px, -90px, 0px, 67px, 89px, 209px, 123px, '../images/sprite.png', 'icon-balloon', );
$icon-mail-name: 'icon-mail';
$icon-mail-x: 0px;
$icon-mail-y: 0px;
$icon-mail-offset-x: 0px;
$icon-mail-offset-y: 0px;
$icon-mail-width: 90px;
$icon-mail-height: 90px;
$icon-mail-total-width: 209px;
$icon-mail-total-height: 123px;
$icon-mail-image: '../images/sprite.png';
$icon-mail: (0px, 0px, 0px, 0px, 90px, 90px, 209px, 123px, '../images/sprite.png', 'icon-mail', );
$icon-tel-name: 'icon-tel';
$icon-tel-x: 157px;
$icon-tel-y: 0px;
$icon-tel-offset-x: -157px;
$icon-tel-offset-y: 0px;
$icon-tel-width: 52px;
$icon-tel-height: 90px;
$icon-tel-total-width: 209px;
$icon-tel-total-height: 123px;
$icon-tel-image: '../images/sprite.png';
$icon-tel: (157px, 0px, -157px, 0px, 52px, 90px, 209px, 123px, '../images/sprite.png', 'icon-tel', );
$spritesheet-width: 209px;
$spritesheet-height: 123px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($icon-arrow-back, $icon-arrow, $icon-balloon, $icon-mail, $icon-tel, );
$spritesheet: (209px, 123px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
